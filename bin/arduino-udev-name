#!/usr/bin/env python

import time
import serial
import argparse

from arduinoudev import get_device_name, set_device_name

if __name__ == "__main__":
    import argparse
    parser = argparse.ArgumentParser()
    parser.add_argument("device", nargs=1,
                        help="serial device")
    parser.add_argument("--baudrate","-b",type=int, required=True,
                        choices=serial.Serial.BAUDRATES,
                        help="baud rate")
    parser.add_argument("--set-name","-s",type=str,
                        help="set the device name")
    parser.add_argument("--wait","-w",type=float,default=0,
                        help="wait this many seconds for the device to settle")
    parser.add_argument("--no-reset",action="store_false", dest="reset",
                        default=True, help="do no reset ardunio before operation")
    parser.add_argument("--verbose", "-v", action="store_true")
    args = parser.parse_args()

    #udev passes this as a relative dev name like USBN
    device = args.device[0].split('/')[-1]

    time.sleep(args.wait)

    ser = serial.Serial(port='/dev/%s'%device, baudrate=args.baudrate, timeout=20.)

    if args.reset:
        ser.setRTS(False)
        ser.setDTR(False)
        time.sleep(0.25)
        ser.setRTS(True)
        ser.setDTR(True)
        time.sleep(0.5)

    time.sleep(1.0)
    ser.flushInput()

    if args.set_name:
        set_device_name(ser, args.set_name)
        name = get_device_name(ser)
    else:
        name = get_device_name(ser)

    if args.verbose:
        print "%sNAME: %s (%s)" % ("SET " if args.set_name else "", name, " ".join(['0x%X'%ord(c) for c in name]))
    else:
        print name

    ser.close()
